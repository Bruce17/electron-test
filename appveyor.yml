version: "{build}-{branch}"

environment:
  matrix:
    - nodejs_version: "6"

platform:
  - x86
  - x64

cache:
  - node_modules
  - '%APPDATA%\npm-cache'
  - '%USERPROFILE%\.electron'

# Fix Git line endings on checkout
init:
  - git config --global core.autocrlf true

install:
  # Update build version depending on package.json version.
  - ps: $env:package_version = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
  - ps: $env:package_name = (Get-Content -Raw -Path package.json | ConvertFrom-Json).name
  - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"

  # Install Node.js
  - ps: Install-Product node $env:nodejs_version $env:platform

  # Reset git repository to remove local changes
  - git reset --hard HEAD

  # Update dependencies.
  - npm install npm -g
  - npm install
  - npm prune

build_script:
  - node --version
  - npm --version
  - npm run build

after_build:
  - echo "files in folder 'out/make/'"
  - dir /a-d /b /s out\make

  # Prepare artifacts manually to rename artifact filename
  - ps: Get-ChildItem .\out\make\**\*.exe | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName $env:package_name-setup-$env:platform }
  - ps: Get-ChildItem .\out\make\**\*.nupkg | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName $env:package_name-nupkg-$env:platform }
  - ps: Get-ChildItem .\out\make\**\RELEASES | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName $env:package_name-RELEASES-$env:platform }

deploy:
  description: ''
  provider: GitHub
  auth_token: $(GH_TOKEN)
  prerelease: true
  on:
#    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only

test: off
